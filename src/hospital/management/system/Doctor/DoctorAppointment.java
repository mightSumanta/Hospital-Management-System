/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.management.system.Doctor;

import hospital.management.system.Database;
import hospital.management.system.userDetails;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumanta
 */
public class DoctorAppointment extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    /**
     * Creates new form DoctorAppointment
     */
    public DoctorAppointment() {
        initComponents();
        conn = Database.java_db();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        
        for (int col = 0; col < table_patientDetails.getColumnCount(); col++) {
                table_patientDetails.getColumnModel().getColumn(col).setPreferredWidth(250);
        }
        
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        combo_patientType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_patientDetails = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btn_viewAppointment = new javax.swing.JButton();
        btn_home = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jPanel1.setLayout(null);

        combo_patientType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In Patient", "Out Patient" }));
        jPanel1.add(combo_patientType);
        combo_patientType.setBounds(288, 146, 130, 33);

        table_patientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_patientDetails.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(table_patientDetails);
        if (table_patientDetails.getColumnModel().getColumnCount() > 0) {
            table_patientDetails.getColumnModel().getColumn(0).setResizable(false);
            table_patientDetails.getColumnModel().getColumn(1).setResizable(false);
            table_patientDetails.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(44, 191, 709, 239);

        jLabel1.setText("Patient Type :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(206, 146, 76, 33);

        btn_viewAppointment.setText("View");
        btn_viewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewAppointmentActionPerformed(evt);
            }
        });
        jPanel1.add(btn_viewAppointment);
        btn_viewAppointment.setBounds(436, 146, 130, 33);

        btn_home.setText("Home");
        btn_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeActionPerformed(evt);
            }
        });
        jPanel1.add(btn_home);
        btn_home.setBounds(340, 440, 130, 43);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_viewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewAppointmentActionPerformed
        // TODO add your handling code here:
        columnNames = new Vector<String>();
        
        if (combo_patientType.getSelectedItem().toString().equals("In Patient")) {
            String sql = "Select patientName, admidId, wardNo, bedNo"
                    + " from InPatient where doctor = ? ";
            
            columnNames.add("Patient Name");
            columnNames.add("Admission Id");
            columnNames.add("Ward No");
            columnNames.add("Bed No");
            
            table_patientDetails.setModel(updateTable(sql, userDetails.userName));
            
            for (int col = 0; col < table_patientDetails.getColumnCount(); col++) {
                table_patientDetails.getColumnModel().getColumn(col).setPreferredWidth(250);
            }
        }
        else if (combo_patientType.getSelectedItem().toString().equals("Out Patient")) {
            String sql = "Select patientName, meetDate, department from OutPatient where doctor = ? ";
            
            columnNames.add("Patient Name");
            columnNames.add("Appointment Date");
            columnNames.add("department");
            
            table_patientDetails.setModel(updateTable(sql, userDetails.userName));
            
            for (int col = 0; col < table_patientDetails.getColumnCount(); col++) {
                table_patientDetails.getColumnModel().getColumn(col).setPreferredWidth(250);
            }
        }
    }//GEN-LAST:event_btn_viewAppointmentActionPerformed

    private void btn_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeActionPerformed
        // TODO add your handling code here:
        
        DoctorMenu dMenu = new DoctorMenu();
        dMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_homeActionPerformed

    private DefaultTableModel updateTable(String sql, String doc) {
        DefaultTableModel tableModel = new DefaultTableModel();
        
        try {      
            pst = conn.prepareStatement(sql);
            pst.setString(1, doc);
            rs = pst.executeQuery();
          
            ResultSetMetaData metaData = rs.getMetaData();
            
            int columnCount  = metaData.getColumnCount();
            
            Vector<Vector<Object>> data = new Vector<Vector<Object>>();
            while (rs.next()) {
                
                Vector<Object> vector = new Vector<Object>();
                for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                    vector.add(rs.getObject(columnIndex));
                }
                data.add(vector);
            }
            tableModel = new DefaultTableModel(data, columnNames);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something happened");
        }
        finally {
            try {
                pst.close();
                rs.close();
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Something happened, oh God");
            }
        }
        return tableModel;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_home;
    private javax.swing.JButton btn_viewAppointment;
    private javax.swing.JComboBox<String> combo_patientType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_patientDetails;
    // End of variables declaration//GEN-END:variables
    Vector<String> columnNames;
}
